//
// r5 - matrix
// r6 - matrix lines
// r7 - matrix columns
// r8 - value to search
// void matrix_search( int *r5[], int r6, int r7, int r8 )
// {
//   int r1 = 0;
//
//   for ( int r11 = 0; r11 != r6; r11++ )
//     for ( int r12 = 0; r12 != r7; r12++ )
//       {
//         if ( r5[r11][r12] == r8 )
//           {
//             r1 = 1;
//             break;
//           }
//       }
// }
//
// simulator crashing
//
DADD R1 R0 R0
DADD R11 R0 R0
DADD R12 R0 R0
//
BEQ R11 R6 15
BEQ R12 R7 14
DADD R0 R0 R0
// loop
DMUL R20 R11 R7
DADD R21 R20 R12
DADD R22 R21 R5
LD R23 0(R22)
BEQ R23 R8 7
// col loop
DADDI R12 R12 1
BNE R12 R7 -6
DADD R12 R0 R0
// line loop
DADDI R11 R11 1
BNE R11 R6 -9
//
BEQ R0 R0 3
//
DADD R0 R0 R0
DADDI R1 R0 1
DADD R0 R0 R0
